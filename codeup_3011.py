# 버블 정렬이란 이웃하는 숫자들끼리 크기를 비교하여 자리를 바꾸는 정렬 기법이다.
# 버블 정렬은 구현이 쉬운 반면 속도가 빠른 편은 아니다.
# 그리고 가장 큰 단점으로 정렬이 이미 다 끝났는데도, 끝까지 대소비교를 하는 문제점이 있다.
# 예를 들어, 10 50 30 20 40 이 있고 오름차순으로 정렬한다면 총 4단계를 거치게되는데,
# 1단계 : 10 30 20 40 50
# 2단계 : 10 20 30 40 50  (정렬 완료)
# 3단계 : 10 20 30 40 50
# 4단계 : 10 20 30 40 50
# 4단계중 이미 2단계에서 정렬이 완료가 된다.
# 이 단계를 구하는것이 문제이다. 이 단계를 찾아 프로그램을 종료시키면 정렬속도를 향상 시킬수있다.
# 이 단계를 찾아 내는 프로그램을 작성하시오.

n = int(input())
d = []
for i in range(n):
    d.append(int(input()))

m = sorted(d)

count = 0
for j in range(n):
    for i in range(n-1):
        if d[i] > d[i+1]:
            temp = d[i]
            d[i] = d[i+1]
            d[i+1] = temp
        count += 1
        if m == d:
            break
            print(count)
